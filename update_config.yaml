# update_config.example
# ========================
# 用于配置单站点批量更新操作。
# ========================

# 筛选条件: 用于选择要执行更新操作的目标渠道。
# 注意: 所有启用的筛选器都会生效。
filters:
  # (常用) 按名称部分匹配。例如，更新所有名称包含 "Azure" 的渠道。
  name_filters: ["Azure"]

  # (常用) 按分组完全匹配。例如，更新所有属于 "default" 分组的渠道。
  # group_filters: ["default"]
  
  # (常用) 按渠道类型ID完全匹配。例如，更新所有 "OpenAI" 类型的渠道。
  # type_filters: [0]

  # --- 筛选逻辑模式 ---
  # "any": (默认) 满足 *至少一个* 过滤器类型即可 (例如，名称匹配 或 分组匹配)。
  # "all": (暂未完全实现) 必须 *同时满足所有* 启用的过滤器类型。
  match_mode: "any"
  
  # --- 排除性筛选器 (可选) ---
  # 如果渠道名称包含 "_bak" 或 "_test"，则排除。
  # exclude_name_filters: ["_bak", "_test"]


# 要应用的更新: 只有 enabled 设置为 true 的项才会被应用。
updates:
  # 示例1：批量追加模型到现有列表
  models:
    enabled: false # 设置为 true 以启用此更新
    mode: "append" # 追加模式
    value: ["gpt-4-turbo", "gpt-4o"]

  # 示例2：批量覆盖分组设置
  group:
    enabled: false
    mode: "overwrite" # 覆盖模式
    value: ["vip"] # 目标渠道的分组将被设置为 "vip"

  # 示例3：批量更新模型映射 (合并模式)
  model_mapping:
    enabled: false
    mode: "merge" # 合并模式：添加或更新键值对，不影响已有映射
    value:
      gpt-3.5-turbo: gpt-4 # 将 gpt-3.5-turbo 请求重定向到 gpt-4
      
  # 示例4：批量更新优先级
  priority:
    enabled: false
    mode: "overwrite"
    value: 10 # 数字越小，优先级越高

  # 示例5：批量启用渠道
  status:
    enabled: false
    mode: "overwrite"
    value: 1 # 1: 启用, 2: 手动禁用